/*33. Create two record types named as “Partner Case” and “Customer Case” on
Case Object. On creation of Case, as per the record type populate the total
number of Partner Case or Customer Case on Account object. Create
Custom Fields on Account to have total numbers*/

trigger recordTypeCase on Case (after insert) {
    if(Trigger.isInsert && Trigger.isAfter){
        List<Id> listofCaseAccountId = new List<Id>();
        for(Case e: Trigger.new){
           listofCaseAccountId.add(e.AccountId);
        }
        List<Account> li = new List<Account>();
        List<Account> li2 = new List<Account>();
        
        for(Account a: [select id, ( select id from Cases where RecordType.DeveloperName ='Partner_Case') from Account where Id in :listofCaseAccountId]){
            a.Partner_Case__c = a.Cases.size();
            li.add(a);
        }
 		update li; 
       for(Account a: [select id, ( select id from Cases where RecordType.DeveloperName ='Customer_Case') from Account where Id in :listofCaseAccountId]){
            a.Customer_Case__c = a.Cases.size();
            li2.add(a);
        }
        update li2; 
    }
    /*
   if(Trigger.isAfter && Trigger.isUndelete){ 
        List<Id> listofEmployeeAccountId = new List<Id>();
        for(Employee__c e: Trigger.new){
           listofEmployeeAccountId.add(e.Account__c);
        }
        List<Account> li = new List<Account>();
        for(Account a: [select id, ( select id from Employee__r) from Account where Id in :listofEmployeeAccountId]){
            a.Employee_Count__c = a.Employee__r.size();
            li.add(a);
        }
        update li;    
    }

*/
}
